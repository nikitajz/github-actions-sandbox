on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  tag_release:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag_version: ${{ env.TAG_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - run: |
          echo "Merge commit: ${{ github.event.pull_request.merge_commit_sha }}. Base branch: ${{ github.base_ref}} Merged branch: ${{ github.head_ref}}"
      - run: | 
          echo "${{ github.head_ref }}" | sed 's/release\//TAG_VERSION=/'>> "$GITHUB_ENV"
      - run: |
          echo "Tag version: [$TAG_VERSION]"

      - name: Create and push tag
        run: |
          git config user.name "GitHub Actions Tag Bot"
          git config user.email "github-actions-tag-bot@github.com"
          git tag -a ${{ env.TAG_VERSION }} -m "Release ${{ env.TAG_VERSION }}"
          git push origin ${{ env.TAG_VERSION }}

      - name: Fetch and display the last three tags
        run: |
          git fetch --tags
          echo "The last three tags are:"
          git tag --sort=-creatordate | head -n 3

  generate-changelog:
    name: Generate changelog
    needs: tag_release
    runs-on: ubuntu-22.04
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@main
        id: git-cliff
        with:
          config: cliff.toml
          args: -v --latest --no-exec --tag ${{ steps.tag_release.outputs.tag_version }} --github-repo ${{ github.repository }}
        env:
          OUTPUT: CHANGES.md

  publish-binaries:
    name: Publish binaries
    needs: generate-changelog
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get latest tag
        run: |
          export RELEASE_VERSION=$(git tag --sort=-creatordate | head -n 1)
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_ENV"
      - name: print vars
        run: echo ${{ env }}
      - name: Install hatchling
        run: pip install --upgrade hatchling build
      - name: Packaging
        run: |
          echo "Packaging version $RELEASE_VERSION"
          # package the binaries
          python -m build
      - name: Publish to GitHub (pre-release)
#        if: ${{ contains(github.ref, '-') }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          overwrite: true
          tag: ${{ steps.tag_release.outputs.tag_version }}
          release_name: "Release: ${{ steps.tag_release.outputs.tag_version }}"
          prerelease: true
          promote: false
          draft: false
          body: ${{ needs.generate-changelog.outputs.release_body }}
